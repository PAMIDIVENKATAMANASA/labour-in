# Generated by Django 5.2.7 on 2025-10-04 08:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("address", models.TextField(blank=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrator"),
                            ("COORDINATOR", "Coordinator"),
                            ("EMPLOYER", "Employer"),
                            ("LABORER", "Laborer"),
                        ],
                        default="LABORER",
                        max_length=12,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("skill_name", models.CharField(max_length=100, unique=True)),
                ("category", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Administrator",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                ("clearance_level", models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Coordinator",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("region", models.CharField(blank=True, max_length=100)),
                ("specialization", models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Employer",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("company_name", models.CharField(max_length=200)),
                ("business_type", models.CharField(max_length=100)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("VERIFIED", "Verified"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("company_size", models.CharField(blank=True, max_length=50)),
                ("established_year", models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="SkilledLaborer",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("JUNIOR", "Junior"),
                            ("MID", "Mid-level"),
                            ("SENIOR", "Senior"),
                            ("EXPERT", "Expert"),
                        ],
                        default="JUNIOR",
                        max_length=10,
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "years_experience",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                ("bio", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("JOB_APPLICATION", "Job Application"),
                            ("APPLICATION_STATUS", "Application Status"),
                            ("NEW_JOB_POSTING", "New Job Posting"),
                            ("WORK_REMINDER", "Work Reminder"),
                            ("RATING_REMINDER", "Rating Reminder"),
                            ("ACCOUNT_UPDATE", "Account Update"),
                        ],
                        max_length=20,
                    ),
                ),
                ("message", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("FAILED", "Failed"),
                        ],
                        default="SENT",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobPosting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job_title", models.CharField(max_length=200)),
                ("job_description", models.TextField()),
                (
                    "work_type",
                    models.CharField(
                        choices=[
                            ("FULL_TIME", "Full Time"),
                            ("PART_TIME", "Part Time"),
                            ("CONTRACT", "Contract"),
                            ("TEMPORARY", "Temporary"),
                        ],
                        default="CONTRACT",
                        max_length=10,
                    ),
                ),
                ("budget_min", models.DecimalField(decimal_places=2, max_digits=10)),
                ("budget_max", models.DecimalField(decimal_places=2, max_digits=10)),
                ("location", models.CharField(max_length=200)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "job_status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("CLOSED", "Closed"),
                            ("IN_PROGRESS", "In Progress"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="OPEN",
                        max_length=12,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "employer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.employer"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WorkHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "work_status",
                    models.CharField(
                        choices=[
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("DISPUTED", "Disputed"),
                        ],
                        default="IN_PROGRESS",
                        max_length=12,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("employer_review", models.TextField(blank=True)),
                (
                    "employer_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "laborer_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("laborer_review", models.TextField(blank=True)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "job_posting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.jobposting"
                    ),
                ),
                (
                    "employer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.employer"
                    ),
                ),
                (
                    "laborer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.skilledlaborer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LaborerSkills",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proficiency_level",
                    models.CharField(
                        choices=[
                            ("BEGINNER", "Beginner"),
                            ("INTERMEDIATE", "Intermediate"),
                            ("ADVANCED", "Advanced"),
                            ("EXPERT", "Expert"),
                        ],
                        default="BEGINNER",
                        max_length=12,
                    ),
                ),
                (
                    "years_experience",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.skill"
                    ),
                ),
                (
                    "laborer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.skilledlaborer",
                    ),
                ),
            ],
            options={
                "unique_together": {("laborer", "skill")},
            },
        ),
        migrations.CreateModel(
            name="JobApplication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proposed_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "application_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("ACCEPTED", "Accepted"),
                            ("REJECTED", "Rejected"),
                            ("WITHDRAWN", "Withdrawn"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                ("cover_letter", models.TextField(blank=True)),
                ("applied_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "job_posting",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.jobposting"
                    ),
                ),
                (
                    "laborer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.skilledlaborer",
                    ),
                ),
            ],
            options={
                "unique_together": {("job_posting", "laborer")},
            },
        ),
    ]
